@model FaceAuth.Models.UserViewModel

@{
    var Title = "Cadastro de Usuário com Foto";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { @action = "Create", enctype = "multipart/form-data" }))
{
    <div class="form-row alert alert-secondary sticky-title-bar">
        <div>
            <span class="h3">@Title</span>
        </div>

        <div class="simple-items-mr">
            <button type="submit" class="btn btn-success">Salvar</button>
        </div>
    </div>

    <div class="card">
        <div class="card-header" id="cardHeaderGen" style="clear:both;">
            <div class="row" style="float:left;">
                <button class="btn" type="button" tabindex="-1" data-toggle="collapse" data-target="#collapseGen" aria-expanded="true" aria-controls="collapseGen">
                    <i class="fa fa-lg fa-angle-double-dow" aria-hidden="true"></i>
                </button>
                <h5 style="margin:auto;">Geral</h5>
            </div>
        </div>
        <div id="collapseGen" class="collapse show" aria-labelledby="cardHeaderGen">
            <div class="card-body">
                <div class="form-row">
                    <div class="form-group col-lg-1">
                        <label asp-for="@Model.User.Id" class="control-label"></label>
                        <input asp-for="@Model.User.Id" class="form-control" />
                        <span asp-validation-for="@Model.User.Id" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-lg-3">
                        <label asp-for="@Model.User.Name" class="control-label"></label>
                        <input asp-for="@Model.User.Name" class="form-control" />
                        <span asp-validation-for="@Model.User.Name" class="text-danger"></span>
                    </div>

                    <div class="form-group col-lg-6">
                        <label asp-for="@Model.User.Email" class="control-label"></label>
                        <input asp-for="@Model.User.Email" class="form-control" />
                        <span asp-validation-for="@Model.User.Email" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label asp-for="@Model.User.Password" class="control-label"></label>
                        <input asp-for="@Model.User.Password" class="form-control" type="password" />
                        <span asp-validation-for="@Model.User.Password" class="text-danger"></span>
                    </div>
                </div>


                <div class="card-body form-group">
                    <h3>Fotos</h3>
                    <div id="webcam-container">
                        <video id="webcam" width="320" height="240" autoplay></video>
                    </div>
                    <button type="button" id="take-photo" class="btn btn-primary">Tirar Foto</button>
                </div>


                <div id="photo-preview" style="display:none;">
                    <h4>Fotos Adicionadas</h4>
                    <div class="card card-body row" id="photo-container"></div>
                    <input type="file" name="@nameof(Model.Pictures)" id="@nameof(Model.Pictures)" multiple style="display:none;" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>

            document.addEventListener("DOMContentLoaded", function () {
            const video = document.getElementById("webcam");
            const takePhotoButton = document.getElementById("take-photo");
            const photoContainer = document.getElementById("photo-container");
            const photoPreview = document.getElementById("photo-preview");
            const inputPictures = document.getElementById("Pictures");

            let capturedImages = []; // Array para armazenar imagens capturadas

            navigator.mediaDevices.getUserMedia({ video: true })
                .then(function (stream) {
                    video.srcObject = stream;
                })
                .catch(function (err) {
                    console.error("Erro ao acessar a webcam:", err);
                });

            takePhotoButton.addEventListener("click", function () {
                const canvas = document.createElement("canvas");
                canvas.width = 320;
                canvas.height = 240;
                const ctx = canvas.getContext("2d");
                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);

                canvas.toBlob(function (blob) {
                    const file = new File([blob], `photo_${Date.now()}.png`, { type: "image/png" });

                    capturedImages.push(file);

                    updateFileInput();

                    const imgElement = document.createElement("img");
                    imgElement.src = URL.createObjectURL(blob);
                    imgElement.classList.add("img-thumbnail");
                    imgElement.style.width = "320px";
                    imgElement.style.margin = "240px";

                    photoContainer.appendChild(imgElement);
                    photoPreview.style.display = "block";

                }, "image/png");
            });

            function updateFileInput() {
                const dataTransfer = new DataTransfer();
                capturedImages.forEach(file => dataTransfer.items.add(file));
                inputPictures.files = dataTransfer.files;
            }
        });
    </script>
}
